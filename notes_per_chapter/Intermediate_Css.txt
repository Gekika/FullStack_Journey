*********************************************************************************  THE CASCADE   **************************************************************************************
Say we have different Css rules pinting to one element here is where the cascading decides 
which rulles get applied matters heirachy 
The order of importance is what matters 
The one latest on the cascade is what appears
 In a CSS file this is teh order of application:
            - External css
            - Internal Css
            - inline Css


The rules that apply are in relation to this 4 rules:

1. Position:
The position matters the lower the rule the higher the priority
Sample: 
        li{
            color: red;
            color: blue;
           }
           here blue will be applied

2. Specificity:
How specific is the slector
ID Selector is the most specific and the code below the color would be orange
Sample: 
        li{color: blue;}
        .first-class{ color:red;}
        li[draggable] {color: purple;}
        #first-id {color:orange;}

3. Type:
External <link rel="stylesheet" href="./stylesheet.css">
Internal <style> h1{color: blue}</style>
inline <h1 style = "color:red"></h1>
inline is the one with most priority


4. importance
we can use the "!important"
color:red;
color: green !important;
green will be displayed

*********************************************************************************  COMBINING CSS SELECTORS  **************************************************************************************
We can combine different selectors to help ease / reduce the css code 
or target specific elements
example:

<p>Yellow Text </p>
<div class="box inner-box">
      <p>Yellow Text </p>
</div>

CSS:
p{
  color:yello;      
}

.inner-box p {
        color:white;
}



note how we combine the selectors to help us reach and change the 
color to white 

We can combine css using
1. Group
        selector, selector {
                color:blueviolet;
        }



2. Child and we use the > symbol to show the child /parent
"Parent"   "child"
selector > selector {
        color: firebrick;
}


3. Descendant 
"ancestor"   "descendant"
selector  selector {
        color: firebrick;
}
Descendant = Apply to a descendant of leftside

<h2>Monday</h2>
  <div class="box">
    <p class="done">Do these things today!</p>
    <ul class="list">
      <li>Wash Clothes</li>
      <li class="done">Read</li>
      <li class="done">Maths Questions</li>
    </ul>
  </div>

  <ul>

  Sample: note here how we can style this list elements since they 
  are descendants of the div we can write css to do this :
        .box li {
                color:blue;
        }


 4. Chaining
 selectorselector {
        color: green;
 }       
 Chaining = Apply where all selectors are true
 we use it to be very very specific
 getting super super specific
 remember to always start with the element 1st 