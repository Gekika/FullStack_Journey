*********************************************************************************  CSS DISPLAY   **************************************************************************************
display property
We introduce the span element
<span></span>
by default span has the display value set to inline
Sample: 
    <h2> Look </h2>
    <h2> We are talking about display </h2>
now this by default will have two lines in a webpage but to make this one line 
we use this css function 
h2{
    display: inline;
}
this will make everthing get into one line and that is what the "span" element has
block - entire screen width
inline - until where content first
inline-block - we can adjust height and width


********************************************************************************* CSS FLOAT    ***************************************************************************************

The float property helps us have style text and image so that they can wrap
around an image
sample:
         <img ..../>
         <p>text .....</p>

now the css to help us have the image blend in the text 
img {
    float: left;
}

Incase we have like a footer and we want to have it covering the whole width below
and we have used float above it we can use the clear css property to remove any styling 
in this case 
<footer> Copyright gekika</footer>

footer{
    clear: left: - remove things on left
    clear: right: - remove things on right
    clear: both: - remove things on both left and right

}


********************************************************************************* HOW TO CREATE RESPONSIVE WEBSITES ***************************************************************************************
 Respond to the screen size
1. Media Queries
2. Css Grid
3. CSS Flexbox
4. External Frameworks eg.Bootstrap

Media Query
Something we type instead of the css selector
Sample:
    @media (max-width: 600px) {
     /*css for screens below or equal to 600px wide*/
    }


CSS Grid (2D)
We set the display to grid
Say we want to create a grid of 5 squares we can vreate using
<div class ="grid-container">
    <div class ="firstcard"></div>
    <div class ="card"></div>
    <div class ="card"></div>
    <div class ="card"></div>
    <div class ="card"></div>
</div>

the css would look like this:
.grid-container {
    display:grid;

}


CSS Flexbox (1D)
how you want a layout horizontally
<div class ="grid-container">
    <div class ="firstcard"></div>
    <div class ="card"></div>
    <div class ="card"></div>
    <div class ="card"></div>
    <div class ="card"></div>
</div>

the css would look like this:
.grid-container {
    display:flex;
    }

Bootstrap Framework
12 divison system

********************************************************************************* MEDIA QUERY ***************************************************************************************

@name     breakpoint
@media (max-width: 600px ) {
    h1 {
        font-size: 15px;
    }
}
you can use and to combine the breakpoints