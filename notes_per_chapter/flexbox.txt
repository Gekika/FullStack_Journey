*********************************************************************************  FLEXBOX   **************************************************************************************
 We learn about Flexbox
 Tabular data  we use table in html
 flexbox could be used for overall page structure

 Sample:
 all you have to do is create a div and put your content
 <div class="container">
    <div class= "one"><p>.......</p></div>
    <div class= "two"><p>.......</p></div>
    <div class= "three"><p>.......</p></div>
 </div>

 in the css target the div 
 .container {
    display: flex;
    gap: 10px
 }
 when using flexbox content is aligned inline and flexbox ignores everything 
 like inline , block etc...........

 display to inline-flex - occupies only space that it needs 


 ********************************************************************************* FLEX DIRECTION   **************************************************************************************
In Flexbox things go from left to right
by default flex-direction is by row
 

 main axis
 ---------->
 if we set the flex-direction to row things arrange themselves horizontally following the main axis


 if we set flex-direction to column things get arranged top to bottom 


flex-basis - more of setting the width in the flex-direction:row

flex-basis - more of setting the height in the flex-direction:column

remember flex-basis is not intended for the parent class but individual/children


 ********************************************************************************* FLEX LAYOUT   **************************************************************************************
Keep in mind about the parent and child in flexbox

Order - order of the child. by default order: 0;
if  set a number in the order the highest one becomes the 1st one on the right

flex-wrap - flex-wrap: nowrap; - this is the default behaviour and will contnue to be pushed off the page
flexwrap: wrap; - will bring content to the next line 
 justify-content: flex-start - ususlly on the parent class - sets the distribution things are bunched to the left
 flex-end - bunches up on the right
 justify-content: center

 justify-content: space-between


align-item: flex-start - setting the distribution of items in column axis
remember to set the height 1st 
align-item: flex-start
height 70vh;

now for the children - we can target each one with align-self
to get the children individually we use 
align-self: center;


align-content oly works when you have set flrex-wrap to wrap

flex-wrap: wrap;
align-content: center;
height: 70vh;
